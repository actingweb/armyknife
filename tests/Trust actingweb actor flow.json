{
  "trigger_url": "https://api.runscope.com/radar/9399c9f4-7814-43ae-a987-8ec755beb05a/trigger", 
  "name": "Trust actingweb actor flow", 
  "version": "1.0", 
  "exported_at": 1510506653, 
  "steps": [
    {
      "body": "{\r\n\"creator\":  \"trust1@actingweb.net\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "actorurl1"
        }, 
        {
          "source": "response_json", 
          "property": "passphrase", 
          "name": "passphrase1"
        }, 
        {
          "source": "response_json", 
          "property": "id", 
          "name": "actorid1"
        }
      ], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Create a new actor using json (trust1)", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "201", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "creator", 
          "value": "trust1@actingweb.net", 
          "source": "response_json"
        }, 
        {
          "comparison": "not_empty", 
          "property": "passphrase", 
          "value": null, 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "body": "{\r\n\"creator\":  \"trust2@actingweb.net\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "actorurl2"
        }, 
        {
          "source": "response_json", 
          "property": "passphrase", 
          "name": "passphrase2"
        }, 
        {
          "source": "response_json", 
          "property": "id", 
          "name": "actorid2"
        }
      ], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Create a new actor using json (trust2)", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "201", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "creator", 
          "value": "trust2@actingweb.net", 
          "source": "response_json"
        }, 
        {
          "comparison": "not_empty", 
          "property": "passphrase", 
          "value": null, 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "body": "{\r\n\"baseuri\": \"testurl\",\r\n\"id\": \"testid\",\r\n\"type\": \"urn:actingweb:actingweb.org:gae-demo\",\r\n\"desc\": \"Test friend relationship\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl1}}/trust/friend", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "trusturl1"
        }, 
        {
          "source": "response_json", 
          "property": "secret", 
          "name": "secret1"
        }
      ], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Create a new trust relationship", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "202", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "testid", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "relationship", 
          "value": "friend", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "false", 
          "source": "response_json"
        }, 
        {
          "comparison": "not_empty", 
          "property": "secret", 
          "value": null, 
          "source": "response_json"
        }, 
        {
          "comparison": "not_empty", 
          "property": "desc", 
          "value": null, 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "false", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peer_approved", 
          "value": "true", 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "url": "{{trusturl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get the new trust relationship as peer, wrong token", 
      "headers": {
        "Authorization": [
          "Bearer wrongsecret"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "403", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "url": "{{trusturl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get the new trust relationship as peer", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "403", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "body": "{\r\n\"approved\": \"true\"\r\n}", 
      "form": {}, 
      "url": "{{trusturl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Approve the new trust relationship ", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{trusturl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get the new trust relationship as peer", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "testid", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "relationship", 
          "value": "friend", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "not_empty", 
          "property": "secret", 
          "value": null, 
          "source": "response_json"
        }, 
        {
          "comparison": "not_empty", 
          "property": "desc", 
          "value": null, 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "type", 
          "value": "urn:actingweb:actingweb.org:gae-demo", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "false", 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "body": "{\r\n\"baseuri\": \"test\",\r\n\"id\": \"test\",\r\n\"type\": \"urn:actingweb:actingweb.org:gae-demo\",\r\n\"desc\": \"Test friend relationship\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl1}}/trust/friend", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "trusturl2"
        }, 
        {
          "source": "response_json", 
          "property": "secret", 
          "name": "secret2"
        }
      ], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Create another trust relationship (trust2)", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "202", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "url": "{{trusturl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get the new trust relationship as peer, but wrong peer", 
      "headers": {
        "Authorization": [
          "Bearer {{secret2}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "403", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "url": "{{actorurl1}}/trust", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get all trust relationship", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{actorurl1}}/trust?peerid=test", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Search in all trust relationship", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"baseuri\": \"{{actorurl1}}\",\r\n\"secret\": \"newsecret\",\r\n\"desc\": \"Changed\"\r\n}", 
      "form": {}, 
      "url": "{{trusturl2}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "wrongpassword"
      }, 
      "fragment": "", 
      "note": "Change a trust relationship, wrong password", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "403", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT"
    }, 
    {
      "body": "{\r\n\"baseuri\": \"{{actorurl1}}\",\r\n\"secret\": \"newsecret\",\r\n\"desc\": \"Changed\"\r\n}", 
      "form": {}, 
      "url": "{{trusturl2}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "notrust@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Change a trust relationship, wrong user", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "403", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"baseuri\": \"{{actorurl1}}\",\r\n\"desc\": \"Changed\"\r\n}", 
      "form": {}, 
      "url": "{{trusturl2}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Change a trust relationship", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{trusturl2}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get the changed trust relationship", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "202", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "test", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "relationship", 
          "value": "friend", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "false", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "desc", 
          "value": "Changed", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "baseuri", 
          "value": "{{actorurl1}}", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{trusturl2}}?peer=true", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Delete the changed trust relationship", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "DELETE", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"url\":  \"{{actorurl2}}/fail\",\r\n\"type\": \"urn:actingweb:actingweb.org:gae-demo\",\r\n\"relationship\": \"friend\",\r\n\"secret\": \"mysecret\",\r\n\"desc\": \"Test relationship between actor1 and actor2\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}{{actorid1}}/trust", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Initiate a new trust (trust3) wrong peer URL", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "408", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"url\":  \"{{actorurl2}}\",\r\n\"relationship\": \"friend\",\r\n\"secret\": \"mysecret\",\r\n\"desc\": \"Test relationship between actor1 and actor2\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}{{actorid1}}/trust", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "trusturl3"
        }, 
        {
          "source": "response_json", 
          "property": "secret", 
          "name": "secret3"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Initiate a new trust (trust3)", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "201", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "true", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "url": "{{trusturl3}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get trust3", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "{{actorid2}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "true", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "url": "{{appRoot}}{{actorid2}}/trust/friend/{{actorid1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Get reciprocal trust3 at actorid2", 
      "headers": {}, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "202", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid2}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "secret", 
          "value": "{{secret3}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "false", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{trusturl3}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Delete reciprocal trust", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "DELETE", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{appRoot}}{{actorid2}}/trust/friend/{{actorid1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Get reciprocal trust3 at actorid2", 
      "headers": {}, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "404", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{trusturl3}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get trust3", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "404", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"url\":  \"{{actorurl2}}\",\r\n\"relationship\": \"lover\",\r\n\"secret\": \"mysecret\",\r\n\"desc\": \"Test lover relationship between actor1 and actor2\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}{{actorid1}}/trust", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "trusturl4"
        }, 
        {
          "source": "response_json", 
          "property": "secret", 
          "name": "secret4"
        }
      ], 
      "scripts": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Initiate a new trust (trust4) from actorid2 to actorid1", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "multipart_form": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "201", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peer_approved", 
          "value": "false", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "url": "{{trusturl4}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get trust4 at actorid1", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "{{actorid2}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "secret", 
          "value": "{{secret4}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peer_approved", 
          "value": "false", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "url": "{{appRoot}}{{actorid2}}/trust/lover/{{actorid1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Get reciprocal trust4 at actorid2", 
      "headers": {}, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "202", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid2}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "secret", 
          "value": "{{secret4}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "false", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peer_approved", 
          "value": "true", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "body": "{\r\n\"approved\": \"true\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}{{actorid2}}/trust/lover/{{actorid1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Approve the trust4 relationship at actorid2", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{appRoot}}{{actorid2}}/trust/lover/{{actorid1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Get reciprocal trust4 at actorid2", 
      "headers": {}, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid2}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "secret", 
          "value": "{{secret4}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peer_approved", 
          "value": "true", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "url": "{{trusturl4}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get trust4 at actorid1", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "{{actorid2}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "secret", 
          "value": "{{secret4}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peer_approved", 
          "value": "true", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "body": "{\r\n  \"test1\": \"value1\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl1}}/devtest/proxy/create", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "proxyurl1"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Create selfproxy with test1 value on /properties", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "trustee_root", 
          "value": "{{actorurl1}}", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "url": "{{actorurl1}}/devtest/proxy/properties", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get /properties from selfproxy", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "test1", 
          "value": "value1", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "body": "{\r\n  \"var1\": \"value1\",\r\n  \"var2\": \"value2\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl1}}/devtest/proxy/properties/test1", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Change test1 value on selfproxy /properties", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{actorurl1}}/devtest/proxy/properties", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get /properties from selfproxy", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "test1[\"var1\"]", 
          "value": "value1", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{actorurl1}}/devtest/proxy/properties", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Delete /properties from selfproxy", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "DELETE", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{actorurl1}}/devtest/proxy/properties", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get /properties from selfproxy", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "404", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{actorurl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Delete actor trust1", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "DELETE", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{actorurl2}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Delete actor trust2", 
      "headers": {}, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "DELETE", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }
  ], 
  "description": ""
}