{
  "trigger_url": "https://api.runscope.com/radar/92eefd8e-721f-4691-be17-19d024f8beaf/trigger", 
  "name": "Subscription actingweb actor flow", 
  "version": "1.0", 
  "exported_at": 1510506636, 
  "steps": [
    {
      "body": "{\r\n\"creator\":  \"trust1@actingweb.net\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "actorurl1"
        }, 
        {
          "source": "response_json", 
          "property": "passphrase", 
          "name": "passphrase1"
        }, 
        {
          "source": "response_json", 
          "property": "id", 
          "name": "actorid1"
        }
      ], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Create a new actor using json (actor1)", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "201", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "creator", 
          "value": "trust1@actingweb.net", 
          "source": "response_json"
        }, 
        {
          "comparison": "not_empty", 
          "property": "passphrase", 
          "value": null, 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "body": "{\r\n\"creator\":  \"trust2@actingweb.net\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "actorurl2"
        }, 
        {
          "source": "response_json", 
          "property": "passphrase", 
          "name": "passphrase2"
        }, 
        {
          "source": "response_json", 
          "property": "id", 
          "name": "actorid2"
        }
      ], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Create a new actor using json (actor2)", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "201", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "creator", 
          "value": "trust2@actingweb.net", 
          "source": "response_json"
        }, 
        {
          "comparison": "not_empty", 
          "property": "passphrase", 
          "value": null, 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "body": "{\r\n\"creator\":  \"trust3@actingweb.net\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "actorurl3"
        }, 
        {
          "source": "response_json", 
          "property": "passphrase", 
          "name": "passphrase3"
        }, 
        {
          "source": "response_json", 
          "property": "id", 
          "name": "actorid3"
        }
      ], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Create a new actor using json (actor3)", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "201", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "creator", 
          "value": "trust3@actingweb.net", 
          "source": "response_json"
        }, 
        {
          "comparison": "not_empty", 
          "property": "passphrase", 
          "value": null, 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "body": "{\r\n\"url\":  \"{{actorurl2}}\",\r\n\"relationship\": \"friend\",\r\n\"desc\": \"Test relationship between actor1 and actor2\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}{{actorid1}}/trust", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "trusturl1"
        }, 
        {
          "source": "response_json", 
          "property": "secret", 
          "name": "secret1"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Initiate a new trust (from actor2 to actor1)", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "201", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{appRoot}}{{actorid2}}/trust/friend/{{actorid1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Get reciprocal trust1 at actorid2", 
      "headers": {}, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "202", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid2}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "secret", 
          "value": "{{secret1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "false", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peer_approved", 
          "value": "true", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "url": "{{trusturl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get trust1 at actorid1", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "peerid", 
          "value": "{{actorid2}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "id", 
          "value": "{{actorid1}}", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "verified", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "approved", 
          "value": "true", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "peer_approved", 
          "value": "false", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "secret", 
          "value": "{{secret1}}", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "body": "{\r\n  \"approved\": true\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}{{actorid2}}/trust/friend/{{actorid1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Approve trust1 at actorid2", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n  \"approved\": true\r\n}", 
      "form": {}, 
      "url": "{{trusturl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Approve trust1 at actorid1", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"url\":  \"{{actorurl3}}\",\r\n\"relationship\": \"friend\",\r\n\"secret\": \"mysecret2\",\r\n\"desc\": \"Test relationship between actor1 and actor3\"\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}{{actorid1}}/trust", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "trusturl2"
        }, 
        {
          "source": "response_json", 
          "property": "secret", 
          "name": "secret2"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Initiate a new trust (from actor3 to actor1)", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "201", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n  \"approved\": true\r\n}", 
      "form": {}, 
      "url": "{{appRoot}}{{actorid3}}/trust/friend/{{actorid1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust3@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase3}}"
      }, 
      "fragment": "", 
      "note": "Approve trust from actorid1 at actorid3", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase3}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"peerid\": \"{{actorid1}}\",\r\n\"target\": \"properties\",\r\n\"subtarget: \"\",\r\n\"granularity\": \"high\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl2}}/subscriptions", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Create a new subscription on actor1 from actor2 no auth", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "401", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "body": "{\r\n\"peerid\": \"{{actorid1}}\",\r\n\"target\": \"properties\",\r\n\"subtarget\": \"test\",\r\n\"granularity\": \"none\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl2}}/subscriptions", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "suburl1"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Create subscription 1 on actor1 from actor2 creator auth", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{actorurl1}}/subscriptions/{{actorid2}}", 
      "variables": [
        {
          "source": "response_json", 
          "property": "data[0].subscriptionid", 
          "name": "subid1"
        }
      ], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get subscription 1 from actor 1 as peer to get subid", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "body": "{\r\n\"peerid\": \"{{actorid1}}\",\r\n\"target\": \"properties\",\r\n\"subtarget\": \"\",\r\n\"granularity\": \"high\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl2}}/subscriptions", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "suburl2"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Create subscription 2 on actor1 from actor2 creator auth", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"peerid\": \"{{actorid1}}\",\r\n\"target\": \"meta\",\r\n\"subtarget\": \"\",\r\n\"granularity\": \"high\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl2}}/subscriptions", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "suburl3"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Create subscription 3 on actor1 from actor2 creator auth", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"peerid\": \"{{actorid1}}\",\r\n\"target\": \"properties\",\r\n\"subtarget\": \"\",\r\n\"granularity\": \"low\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl3}}/subscriptions", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "suburl4"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust3@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase3}}"
      }, 
      "fragment": "", 
      "note": "Create  subscription 4 on actor1 from actor3 creator auth", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase3}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"peerid\": \"{{actorid1}}\",\r\n\"target\": \"properties\",\r\n\"subtarget\": \"data2\",\r\n\"granularity\": \"high\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl3}}/subscriptions", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "suburl5"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust3@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase3}}"
      }, 
      "fragment": "", 
      "note": "Create  subscription 5 on actor1 from actor3 creator auth", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase3}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{actorurl1}}/subscriptions/{{actorid3}}", 
      "variables": [
        {
          "source": "response_json", 
          "property": "data[1].subscriptionid", 
          "name": "subid5"
        }
      ], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get subscription 5 from actor 1 as peer to get subid", 
      "headers": {
        "Authorization": [
          "Bearer {{secret2}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "body": "{\r\n\"peerid\": \"{{actorid1}}\",\r\n\"target\": \"properties\",\r\n\"subtarget\": \"\",\r\n\"granularity\": \"none\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl3}}/subscriptions", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "suburl6"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust3@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase3}}"
      }, 
      "fragment": "", 
      "note": "Create  subscription 6 on actor1 from actor3 creator auth", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase3}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n\"peerid\": \"{{actorid1}}\",\r\n\"target\": \"properties\",\r\n\"subtarget\": \"test\",\r\n\"resource\": \"resource\",\r\n\"granularity\": \"none\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl2}}/subscriptions", 
      "variables": [
        {
          "source": "response_headers", 
          "property": "Location", 
          "name": "suburl7"
        }
      ], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Create subscription 7 w/resource on actor1 from actor2 creator auth", 
      "headers": {
        "Content-Type": [
          "application/json"
        ]
      }, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{actorurl2}}/callbacks/subscriptions/{{actorid1}}/invalidsubid", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Verify callback on actor2 for invalid subid as peer actor1", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "404", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "body": "{\r\n  \"test\": \"fake\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl2}}/callbacks/subscriptions/{{actorid1}}/{{subid1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Verify callback on actor2 for subscription 1", 
      "headers": {
        "Content-Type": [
          "application/json"
        ], 
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "body": "{\r\n\"data1\": {\r\n   \"str1\": \"initial\", \r\n  \"str2\": \"initial\"\r\n  },\r\n\"data2\": \"initial\",\r\n\"test\": {\r\n  \"var1\": \"initial\",\r\n  \"var2\": \"initial\",\r\n  \"resource\": \"initial\"\r\n  }\r\n}", 
      "form": {}, 
      "url": "{{actorurl1}}/properties", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Post initial data to /properties", 
      "headers": {
        "Content-Type": [
          "application/json"
        ], 
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "201", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "data2", 
          "value": "initial", 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "body": "change1", 
      "form": {}, 
      "url": "{{actorurl1}}/properties/test", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Put change 1 to /properties/test", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT"
    }, 
    {
      "body": "change2", 
      "form": {}, 
      "url": "{{actorurl1}}/properties/test", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Put change 2 to /properties/test", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT"
    }, 
    {
      "body": "change3", 
      "form": {}, 
      "url": "{{actorurl1}}/properties/test", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Put change 3 to /properties/test", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT"
    }, 
    {
      "body": "{\r\n  \"resource\": \"change4\",\r\n  \"some\": \"data\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl1}}/properties/test", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Put change 4 to /properties/test", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT"
    }, 
    {
      "body": "change5", 
      "form": {}, 
      "url": "{{actorurl1}}/properties/test/resource", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Put change 5 to /properties/test/resource", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT"
    }, 
    {
      "url": "{{actorurl1}}/subscriptions", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "wrongpassword"
      }, 
      "fragment": "", 
      "note": "Get subscriptions on actor 1 as creator wrong password", 
      "headers": {}, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "403", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "url": "{{actorurl1}}/subscriptions", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Get subscriptions on actor 1 as creator", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "url": "{{actorurl1}}/subscriptions?target=properties", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Search subscriptions on actor 1 as creator", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "data[0].target", 
          "value": "properties", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[1].target", 
          "value": "properties", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[2].target", 
          "value": "properties", 
          "source": "response_json"
        }
      ]
    }, 
    {
      "url": "{{actorurl1}}/subscriptions/{{actorid2}}?target=meta", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Search subscriptions on actor 1 as peer 2 with target", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "data[0].target", 
          "value": "meta", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[0].sequence", 
          "value": "1", 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "url": "{{actorurl1}}/subscriptions/{{actorid2}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Search subscriptions on actor 1 as peer actor 2", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "url": "{{suburl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get subscription 1 as peer actor 2", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[0].sequence", 
          "value": "1", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[0].data[\"resource\"]", 
          "value": "initial", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[1].sequence", 
          "value": "2", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[1].data", 
          "value": "change1", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[2].sequence", 
          "value": "3", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[2].data", 
          "value": "change2", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[3].sequence", 
          "value": "4", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[3].data", 
          "value": "change3", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[4].data[\"some\"]", 
          "value": "data", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[4].data[\"resource\"]", 
          "value": "change4", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[5].data[\"resource\"]", 
          "value": "change5", 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "url": "{{suburl7}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get subscription 7 as peer actor 2", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[0].sequence", 
          "value": "1", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[0].data", 
          "value": "initial", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[1].sequence", 
          "value": "2", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[1].data", 
          "value": "change4", 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "url": "{{suburl1}}/1", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get subscription 1 diff 1 as peer actor 2", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "url": "{{suburl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get subscription 1 as peer actor 2", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[0].sequence", 
          "value": "2", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[0].data", 
          "value": "change1", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[1].sequence", 
          "value": "3", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[1].data", 
          "value": "change2", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[2].sequence", 
          "value": "4", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[2].data", 
          "value": "change3", 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "body": "{\r\n\"sequence\": 2\r\n}", 
      "form": {}, 
      "url": "{{suburl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Clear subscription 1 as peer actor 2 up to seq 2", 
      "headers": {
        "Content-Type": [
          "application/json"
        ], 
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "PUT"
    }, 
    {
      "url": "{{suburl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get subscription 1 as peer actor 2 after clearing", 
      "headers": {
        "Authorization": [
          "Bearer {{secret1}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[0].sequence", 
          "value": "3", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[0].data", 
          "value": "change2", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[1].sequence", 
          "value": "4", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal", 
          "property": "data[1].data", 
          "value": "change3", 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "url": "{{suburl6}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get subscription 6 as peer actor 2", 
      "headers": {
        "Authorization": [
          "Bearer {{secret2}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "200", 
          "source": "response_status"
        }, 
        {
          "comparison": "equal", 
          "property": "data[0].data.data1.str2", 
          "value": "initial", 
          "source": "response_json"
        }, 
        {
          "comparison": "equal_number", 
          "property": "data[0].sequence", 
          "value": "1", 
          "source": "response_json"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{suburl2}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Delete subscription 2 as peer - wrong secret", 
      "headers": {
        "Authorization": [
          "Bearer wrongsecret"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "403", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "DELETE"
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{suburl4}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Delete subscription 4 as peer actor 3", 
      "headers": {
        "Authorization": [
          "Bearer {{secret2}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "DELETE"
    }, 
    {
      "url": "{{suburl4}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Get subscription 4 as peer actor 3", 
      "headers": {
        "Authorization": [
          "Bearer {{secret2}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "404", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "GET"
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{actorurl3}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust3@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase3}}"
      }, 
      "fragment": "", 
      "note": "Delete actor 3", 
      "headers": {}, 
      "auth.password": "{{passphrase3}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "DELETE", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "{\r\n  \"test\": \"fake\"\r\n}", 
      "form": {}, 
      "url": "{{actorurl1}}/callbacks/subscriptions/{{actorid3}}/{{subid5}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {}, 
      "fragment": "", 
      "note": "Try callback on actor1 for subscription 5 from actor3", 
      "headers": {
        "Content-Type": [
          "application/json"
        ], 
        "Authorization": [
          "Bearer {{secret2}}"
        ]
      }, 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "404", 
          "source": "response_status"
        }
      ], 
      "scripts": [], 
      "before_scripts": [], 
      "method": "POST"
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{actorurl1}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust1@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase1}}"
      }, 
      "fragment": "", 
      "note": "Delete actor 1", 
      "headers": {}, 
      "auth.password": "{{passphrase1}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "DELETE", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }, 
    {
      "body": "", 
      "form": {}, 
      "url": "{{actorurl2}}", 
      "variables": [], 
      "step_type": "request", 
      "auth": {
        "username": "trust2@actingweb.net", 
        "auth_type": "basic", 
        "password": "{{passphrase2}}"
      }, 
      "fragment": "", 
      "note": "Delete actor 2", 
      "headers": {}, 
      "auth.password": "{{passphrase2}}", 
      "scripts": [], 
      "before_scripts": [], 
      "method": "DELETE", 
      "assertions": [
        {
          "comparison": "equal_number", 
          "value": "204", 
          "source": "response_status"
        }
      ]
    }
  ], 
  "description": ""
}