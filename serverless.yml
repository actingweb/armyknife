# serverless.yml

service: armyknife

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-pseudo-parameters
custom:
  wsgi:
    app: application.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
  db_prefix: armyknife_dev
  execRoleArn: { "Fn::Join" : ["", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":role/ecsTaskExecutionRole" ] ] }

provider:
  name: aws
  runtime: python3.7
  memorySize: 128
  timeout: 30
  stage: dev
  region: us-west-1
  environment:
    LOG_LEVEL: 'DEBUG'
    APP_HOST_FQDN: 'me.greger.io'
    APP_HOST_PROTOCOL: 'https://'
    AWS_DB_PREFIX: ${self:custom.db_prefix}
    AWS_FARGATE_REGION: 'us-west-2'
    AWS_FARGATE_CLUSTER: 'default'
    AWS_FARGATE_TASK: 'armyknife-fargate-dev'
    AWS_FARGATE_SEC_GROUP: 'sg-07182a58113457cda'
    AWS_FARGATE_SUBNET1: 'subnet-0fe25e095542cf484'
    AWS_FARGATE_SUBNET2: 'subnet-0d7f06e8a44c4ab4e'
    FARGATE_DISABLE: 'True'
    APP_BOT_TOKEN: 'OWNmNjgzYmEtMDMwMi00ZjUwLTk1YWQtMThmN2NlZDIwNDc4ZjNhYTdiYjctMDY1'
    APP_BOT_EMAIL: 'greger@webex.bot'
    APP_BOT_SECRET: '=7@2ALaj&88weAUEt-y+k9_=+gH?XQ'
    APP_BOT_ADMIN_ROOM: 'Y2lzY29zcGFyazovL3VzL1JPT00vOWE4NGEwYjAtMDY0Ni0xMWU3LTkyZWMtMmI2MzE0NTI2Yzky'
    APP_OAUTH_ID: 'C1ac002f82f38127f7774b50daa5895c3f1474a2929ecf83298b86ac420410f5c'
    APP_OAUTH_KEY: '45d2680412b4fe4a2782cd8c134e1db720fc22655d8e92d736d037adc5daeed6'
    STRIPE_WEBHOOK_SECRET: 'whsec_OOAQaJWTXVZo4KkWB99aWicUtFBg6a8e'
    STRIPE_API_KEY: 'sk_test_IiAlGGLyqmEPPfqF4VY8Zn3w'
    STRIPE_PLAN_MONTHLY: 'plan_DT7JcRIIvbEIRh'
    STRIPE_PLAN_YEARLY: 'plan_DWYIIload0BMNa'

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:CreateTable
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.db_prefix}_*"
    - Effect: "Allow"
      Action:
        - ecs:RunTask
      Resource: "*"
    - Effect: Allow
      Action:
        - iam:PassRole
      Resource: ${self:custom.execRoleArn}
functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
